import{_ as P,h as M,B as S,O as h,C as E,P as F,o as T,c as L,a as b,u as B,J as I}from"./index-Bxy9qgrl.js";const q=["stroke"],y=1755,z={__name:"LoaderSpinner",props:["classes","three"],setup(c){const l=M(null);let m=null;const f=[.15,.11,.08,.22,.44].map(e=>y*e),k=[100,50,50,180,360],v=[e=>d(50,100,50,100-e),e=>d(50,0,50-e,e),e=>d(0,50,e,50),e=>g(50,26.5,23.5,23.5,Math.PI/2,e),e=>g(50,50,47,47,-Math.PI/2,e)];async function d(e,a,s,n){const t=await r();t.beginPath(),t.moveTo(e,a),t.lineTo(s,n),t.stroke()}async function g(e,a,s,n,t,i){const o=await r();o.beginPath(),o.ellipse(e,a,s,n,t,0,-Math.PI/180*i,!0),o.stroke()}async function x(){for(;!l.value||!l.value.getContext("2d");)await new Promise(e=>setTimeout(e,50));return l.value}async function r(){const a=(await x()).getContext("2d");if(!a)throw new Error("Failed to get 2D context");return a}async function w(e){const a=await r();m||(m=e);const s=e-m;a.clearRect(0,0,100,100);let n=0;for(let t=0;t<v.length;t++){const i=n,o=n+f[t],u=Math.min(Math.max((s-i)/f[t],0),1),p=k[t]*u;await v[t](p),n=o}s<y||(m=null),requestAnimationFrame(w)}const C=async()=>{const e=await r();e.strokeStyle=h.themeColor};return S(async()=>{await x();const e=await r();e.lineWidth=7,e.strokeStyle=h.themeColor,requestAnimationFrame(w),window.addEventListener("themechange",C)}),E(()=>{window.removeEventListener("themechange",C)}),F(()=>h.themeColor,async e=>{const a=await r();a.strokeStyle=e}),(e,a)=>{var s,n,t,i,o,u;return T(),L("div",{class:I(["spinner-container flex-center w100",{vertical:(s=c.classes)==null?void 0:s.vertical,horizontal:(n=c.classes)==null?void 0:n.horizontal,iframe:(t=c.classes)==null?void 0:t.iframe,preview:(i=c.classes)==null?void 0:i.preview,other:(o=c.classes)==null?void 0:o.other,"one-of-three":c.three,null:(u=c.classes)==null?void 0:u.white_bg}])},[b("canvas",{id:"spinnerCanvas",ref_key:"spinnerCanvas",ref:l,class:"spinner-canvas icon",width:"100",height:"100",stroke:B(h).themeColor},null,8,q)],2)}}},D=P(z,[["__scopeId","data-v-dbd670cf"]]);export{D as default};
